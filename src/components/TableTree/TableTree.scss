.tree-container {
  width: 100%;
  font-size: 12px;
  color: #71347B;

  table {
    border-collapse: collapse;
    width: 100%;
    text-align: left;
  }

  th {
    background-color: #f0e7f4;
    color: #252c37;
    font-weight: 600;
    padding: 8px;
  
  }

  th, td {
    padding: 10px;
    vertical-align: top;
      // border: 1px solid red;
  }

  .title-container {
    display: flex;
    align-items: center;
    position: relative;

    .folder {
      display: flex;
    }

    .title {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      font-weight: 400;
    }
  }

  .node-li {
    position: relative;
    --indent-size: 20px;
    --node-height: 20px; // Base height for each node

    td:first-child {
      padding-left: calc(var(--level) * var(--indent-size));
    }

    // Vertical line for connection from parent to children
    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: calc(var(--level) * var(--indent-size) - 10px);
      width: 1px;
      height: calc((var(--total-height)) * var(--node-height)); // Adjusted to ensure no gap
      background-color: #D7B5E3;
      z-index: 1;
    }

    // Horizontal line connecting child node to parent
    &::after {
      content: "";
      position: absolute;
      top: 50%;
      left: calc(var(--level) * var(--indent-size) - 10px);
      width: 16px;
      height: 1px;
      background-color: #D7B5E3;
      z-index: 1;
    }

    // If node has children, extend vertical line fully
    &.has-children::before {
      height: calc((var(--total-height)) * var(--node-height)); // Ensure it covers total height
    }

    // For the last child node, limit the vertical line
    &.is-last::before {
      height: calc(var(--node-height) / 2); // Shorten the vertical line for the last child
    }

    // Remove lines for root level
    &[style*="--level: 0"] {
      &::before,
      &::after {
        content: none;
      }
    }
  }
}

